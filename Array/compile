#!/bin/bash

numArgs=$#

safeRemoveDir () {
	if [[ -d "$1" ]]
	then
		rm -r $1
	fi
}

run() {
	(
		if [[ -d build ]] 
		then
			cd build
			path=$(find . -maxdepth 1 -perm /111 -type f)
			echo "Running $path..."
			${path}
			return 0
		else
			echo "Could not find \"build/\""
			return 1
		fi
	)
}

build() {
	(
		safeRemoveDir build
		mkdir build
		cd build
		if ! cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..
		then
			return 1
		fi

		if ! make
		then
			return 1
		fi

		if [[ -e compile_commands.json ]]
		then
			mv compile_commands.json ..
		fi
	)
	return 0
}

if [[ -$# -eq 0 ]]
then
	build
	exit $?
fi

usage="$(basename "$0") [-h|--help] [-c|--clean]

-h|--help : Show this menu
-c|--clean : Clean up build files
-r|--run : Run executable w/o args
-br|--buildrun : Build project then run executable w/o args
No args : Build project"


while [[ $# -gt 0 ]] 
do
	case $1 in 
		-h|--help)
			echo "$usage"
			exit 0
			;;
		-c|--clean)
			safeRemoveDir build
			if [[ -e compile_commands.json ]]
			then
				rm compile_commands.json
			fi
			echo "Cleaned project"
			exit 0
			;;
		-r|--run)
			run
			exit $?
			;;
		-br|--buildrun)
			build
			run
			exit $?
			;;
		*)
			echo "Unrecognized option $1"
			exit 1
			;;
	esac
done

